import React, { useState } from 'react';
import { youtubeService } from '../services/youtube-api';
import { smartAIService } from '../services/smart-ai-service';
import DocumentUpload from './DocumentUpload';
import SavedDocumentsManager from './SavedDocumentsManager';
import { SavedFile } from '../services/file-storage-service';

interface SmartAssistantProps {
  studentId?: string;
  studentName?: string;
}

const SmartAssistant: React.FC<SmartAssistantProps> = ({ 
  studentId = 'demo-student', 
  studentName = 'ุงูุทุงูุจ' 
}) => {
  const [isChatOpen, setIsChatOpen] = useState(false);
  const [messages, setMessages] = useState<Array<{id: string, from: 'user' | 'bot', text: string, timestamp: Date, videoLinks?: string[]}>>([]);
  const [inputMessage, setInputMessage] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [selectedSubject, setSelectedSubject] = useState('');
  const [isDocumentUploadOpen, setIsDocumentUploadOpen] = useState(false);
  const [isSavedDocumentsOpen, setIsSavedDocumentsOpen] = useState(false);
  const [uploadedDocument, setUploadedDocument] = useState<{file: File, text: string} | null>(null);
  const [useSmartAI, setUseSmartAI] = useState(true);

  const subjects = [
    'ุงูุฑูุงุถูุงุช',
    'ุงูุนููู',
    'ุงููุบุฉ ุงูุนุฑุจูุฉ',
    'ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ',
    'ุงูุชุงุฑูุฎ',
    'ุงูุฌุบุฑุงููุง',
    'ุงูููุฒูุงุก',
    'ุงูููููุงุก',
    'ุงูุฃุญูุงุก',
    'ุนุงู'
  ];

  // Mock AI responses
  const getMockAIResponse = (message: string, subject: string = 'ุนุงู') => {
    const responses = {
      'ูุฑุญุจุง': {
        reply: `ูุฑุญุจุงู! ุฃูุง ุงููุณุงุนุฏ ุงูุฐูู. ุฃูุง ููุง ููุณุงุนุฏุชู ูู ุฏุฑุงุณุชู. ูููููู:\n\nโข ุดุฑุญ ุงูุฏุฑูุณ ุจุทุฑููุฉ ูุจุณุทุฉ\nโข ุชูุฎูุต ุงูููุงุฏ ูู ููุงุท ูุงุถุญุฉ\nโข ุงูุชุฑุงุญ ููุฏูููุงุช ุชุนููููุฉ\nโข ุงูุฅุฌุงุจุฉ ุนูู ุงูุฃุณุฆูุฉ ุงูุฃูุงุฏูููุฉ\nโข ุชูุฏูู ูุตุงุฆุญ ุฏุฑุงุณูุฉ\n\nูุง ุงูุฐู ุชุฑูุฏ ุงููุณุงุนุฏุฉ ูููุ`,
        videoLinks: []
      },
      'ุดุฑุญ': {
        reply: `ุฃููุงู! ุณุฃููู ุจุดุฑุญ ุงูููุถูุน ูู ุจุทุฑููุฉ ูุจุณุทุฉ ููููููุฉ. ${subject !== 'ุนุงู' ? `ูู ูุงุฏุฉ ${subject}:` : ''}\n\nูุฑุฌู ุชุญุฏูุฏ ุงูููุถูุน ุงูุฐู ุชุฑูุฏ ุดุฑุญูุ ูุณุฃููู ุจุดุฑุญู ูู ุฎุทูุฉ ุจุฎุทูุฉ ูุน ุฃูุซูุฉ ุชูุถูุญูุฉ.`,
        videoLinks: [
          'https://www.youtube.com/watch?v=dQw4w9WgXcQ',
          'https://www.youtube.com/watch?v=9bZkp7q19f0'
        ]
      },
      'ุชูุฎูุต': {
        reply: `ุณุฃููู ุจุชูุฎูุต ุงูููุถูุน ูู ูู ููุงุท ูุงุถุญุฉ ููููููุฉ. ${subject !== 'ุนุงู' ? `ูู ูุงุฏุฉ ${subject}:` : ''}\n\nูุฑุฌู ุชุญุฏูุฏ ุงูููุถูุน ุงูุฐู ุชุฑูุฏ ุชูุฎูุตูุ ูุณุฃูุฏู ูู ุงูููุงุท ุงูุฑุฆูุณูุฉ ูุงูููุงููู ุงููููุฉ.`,
        videoLinks: []
      },
      'ูุณุงุนุฏุฉ': {
        reply: `ุฃูุง ููุง ููุณุงุนุฏุชู ูู ุฏุฑุงุณุชู! ูููููู ูุณุงุนุฏุชู ูู:\n\n๐ **ุดุฑุญ ุงูุฏุฑูุณ**: ุดุฑุญ ุฃู ุฏุฑุณ ุจุทุฑููุฉ ูุจุณุทุฉ\n๐ **ุชูุฎูุต ุงูููุงุฏ**: ุชูุฎูุต ุงูุฏุฑูุณ ูู ููุงุท ูุงุถุญุฉ\n๐ฅ **ุงูููุฏูููุงุช**: ุงูุชุฑุงุญ ููุฏูููุงุช ุชุนููููุฉ ูููุฏุฉ\nโ **ุงูุฃุณุฆูุฉ**: ุงูุฅุฌุงุจุฉ ุนูู ุฃุณุฆูุชู ุงูุฃูุงุฏูููุฉ\n๐ก **ุงููุตุงุฆุญ**: ุชูุฏูู ูุตุงุฆุญ ุฏุฑุงุณูุฉ ูุฎุตุตุฉ\n\nูุง ุงูุฐู ุชุญุชุงุฌ ูุณุงุนุฏุฉ ููู ุชุญุฏูุฏุงูุ`,
        videoLinks: []
      },
      'ุดูุฑุง': {
        reply: `ุงูุนูู! ุฃูุง ุณุนูุฏ ุฌุฏุงู ููุณุงุนุฏุชู. ๐\n\nุฅุฐุง ูุงู ูุฏูู ุฃู ุฃุณุฆูุฉ ุฃุฎุฑู ุฃู ุชุญุชุงุฌ ูุณุงุนุฏุฉ ูู ุฃู ููุถูุนุ ููุง ุชุชุฑุฏุฏ ูู ุณุคุงูู. ุฃูุง ููุง ุฏุงุฆูุงู ููุณุงุนุฏุชู ูู ุฏุฑุงุณุชู!\n\nุฃุชููู ูู ุงูุชูููู ูุงููุฌุงุญ! ๐โจ`,
        videoLinks: []
      },
      'ุฑูุงุถูุงุช': {
        reply: `ุฃููุงู! ุณุฃุณุงุนุฏู ูู ุงูุฑูุงุถูุงุช. ูููููู ุดุฑุญ:\n\n๐ข **ุงูุฌุจุฑ**: ุงููุนุงุฏูุงุช ูุงููุชุบูุฑุงุช\n๐ **ุงูููุฏุณุฉ**: ุงูุฃุดูุงู ูุงูุฒูุงูุง\n๐ **ุงูุฅุญุตุงุก**: ุงูุจูุงูุงุช ูุงูุฑุณูู ุงูุจูุงููุฉ\n๐ **ุงูุชูุงุถู ูุงูุชูุงูู**: ูููุฑุงุญู ุงููุชูุฏูุฉ\n\nูุง ูู ุงูููุถูุน ุงูุฐู ุชุฑูุฏ ุดุฑุญู ูู ุงูุฑูุงุถูุงุชุ`,
        videoLinks: ['https://www.youtube.com/watch?v=math1', 'https://www.youtube.com/watch?v=math2']
      },
      'ุนููู': {
        reply: `ุฃููุงู! ุณุฃุณุงุนุฏู ูู ุงูุนููู. ูููููู ุดุฑุญ:\n\nโ๏ธ **ุงูููููุงุก**: ุงูุนูุงุตุฑ ูุงูุชูุงุนูุงุช\n๐ฌ **ุงูููุฒูุงุก**: ุงูููู ูุงูุทุงูุฉ\n๐งฌ **ุงูุฃุญูุงุก**: ุงููุงุฆูุงุช ุงูุญูุฉ\n๐ **ุนููู ุงูุฃุฑุถ**: ุงูุจูุฆุฉ ูุงูุทุจูุนุฉ\n\nูุง ูู ุงูููุถูุน ุงูุฐู ุชุฑูุฏ ุดุฑุญู ูู ุงูุนูููุ`,
        videoLinks: [
          'https://www.youtube.com/watch?v=H8WJ2KENlK0',
          'https://www.youtube.com/watch?v=WUvTyaaNkzM'
        ]
      },
      'ุนุฑุจู': {
        reply: `ุฃููุงู! ุณุฃุณุงุนุฏู ูู ุงููุบุฉ ุงูุนุฑุจูุฉ. ูููููู ุดุฑุญ:\n\n๐ **ุงููุญู**: ููุงุนุฏ ุงููุบุฉ ุงูุนุฑุจูุฉ\nโ๏ธ **ุงูุตุฑู**: ุชุญููู ุงููููุงุช\n๐ **ุงูุฃุฏุจ**: ุงูุดุนุฑ ูุงููุซุฑ\n๐ฃ๏ธ **ุงูุจูุงุบุฉ**: ูููู ุงูููุงู\n\nูุง ูู ุงูููุถูุน ุงูุฐู ุชุฑูุฏ ุดุฑุญู ูู ุงููุบุฉ ุงูุนุฑุจูุฉุ`,
        videoLinks: ['https://www.youtube.com/watch?v=arabic1']
      },
      'ุงูุฌููุฒู': {
        reply: `Hello! I can help you with English. I can explain:\n\n๐ **Grammar**: Rules and structures\n๐ **Vocabulary**: Words and meanings\n๐ฃ๏ธ **Conversation**: Speaking skills\nโ๏ธ **Writing**: Composition and essays\n\nWhat topic would you like help with in English?`,
        videoLinks: ['https://www.youtube.com/watch?v=english1']
      },
      'ุนุงุตูุฉ': {
        reply: `ุนุงุตูุฉ ูุจูุงู ูู ุจูุฑูุช. ุจูุฑูุช ูู ุงูุนุงุตูุฉ ุงูุณูุงุณูุฉ ูุงูุงูุชุตุงุฏูุฉ ูุงูุซูุงููุฉ ููุฌูููุฑูุฉ ุงููุจูุงููุฉุ ูุชูุน ุนูู ุงูุณุงุญู ุงูุดุฑูู ููุจุญุฑ ุงูุฃุจูุถ ุงููุชูุณุท.\n\nูุนูููุงุช ุฅุถุงููุฉ ุนู ุจูุฑูุช:\nโข ุนุฏุฏ ุงูุณูุงู: ุญูุงูู 2.4 ููููู ูุณูุฉ\nโข ุงููุบุฉ ุงูุฑุณููุฉ: ุงูุนุฑุจูุฉ\nโข ุงูุนููุฉ: ุงูููุฑุฉ ุงููุจูุงููุฉ\nโข ุงูููุงุฎ: ูุชูุณุทู ูุนุชุฏู\nโข ุงููุนุงูู ุงูุดููุฑุฉ: ุงูุฌุงูุนุฉ ุงูุฃูุฑูููุฉุ ุงููุชุญู ุงููุทููุ ููุฑููุด ุจูุฑูุช\n\nูู ุชุฑูุฏ ูุนูููุงุช ุฃูุซุฑ ุนู ูุจูุงู ุฃู ุจูุฑูุชุ`,
        videoLinks: []
      },
      'ูุจูุงู': {
        reply: `ูุจูุงู ุฏููุฉ ุนุฑุจูุฉ ุชูุน ูู ุงูุดุฑู ุงูุฃูุณุท. ุฅููู ูุนูููุงุช ูููุฉ ุนู ูุจูุงู:\n\n๐๏ธ **ุงูุนุงุตูุฉ**: ุจูุฑูุช\n๐ **ูุธุงู ุงูุญูู**: ุฌูููุฑูุฉ ุจุฑููุงููุฉ\n๐ฐ **ุงูุนููุฉ**: ุงูููุฑุฉ ุงููุจูุงููุฉ\n๐ฃ๏ธ **ุงููุบุฉ**: ุงูุนุฑุจูุฉ (ุงูุฑุณููุฉ)\n๐ **ุงููููุน**: ุงูุดุฑู ุงูุฃูุณุทุ ุนูู ุงูุจุญุฑ ุงูุฃุจูุถ ุงููุชูุณุท\n\nูุจูุงู ุฏููุฉ ูุชููุนุฉ ุซูุงููุงู ูุฏูููุงูุ ูุชุดุชูุฑ ุจุงูุชููุน ุงูุซูุงูู ูุงูุณูุงุญุฉ ูุงูุฒุฑุงุนุฉ.`,
        videoLinks: []
      },
      'ูุทุฑ': {
        reply: `ูุทุฑ ุฏููุฉ ุนุฑุจูุฉ ุชูุน ูู ุดุจู ุงูุฌุฒูุฑุฉ ุงูุนุฑุจูุฉ. ุฅููู ูุนูููุงุช ูููุฉ ุนู ูุทุฑ:\n\n๐๏ธ **ุงูุนุงุตูุฉ**: ุงูุฏูุญุฉ\n๐ **ูุธุงู ุงูุญูู**: ุฅูุงุฑุฉ ูุฑุงุซูุฉ\n๐ฐ **ุงูุนููุฉ**: ุงูุฑูุงู ุงููุทุฑู\n๐ฃ๏ธ **ุงููุบุฉ**: ุงูุนุฑุจูุฉ (ุงูุฑุณููุฉ)\n๐ **ุงููููุน**: ุดุจู ุงูุฌุฒูุฑุฉ ุงูุนุฑุจูุฉ\n\nูุทุฑ ุฏููุฉ ุบููุฉ ุจุงูููุท ูุงูุบุงุฒ ุงูุทุจูุนูุ ูุชุดุชูุฑ ุจูุทุฑ ููุทูุฑุงู ูุงูุงุณุชุซูุงุฑุงุช ุงูุฑูุงุถูุฉ.`,
        videoLinks: []
      },
      'default': {
        reply: `ุดูุฑุงู ูุณุคุงูู! ${subject !== 'ุนุงู' ? `ูู ูุงุฏุฉ ${subject}:` : ''}\n\nุฃูุง ุงููุณุงุนุฏ ุงูุฐูู. ูููููู ูุณุงุนุฏุชู ูู:\n\n๐ **ุดุฑุญ ุงูุฏุฑูุณ**: ุฃู ุฏุฑุณ ุชุฑูุฏู\n๐ **ุชูุฎูุต ุงูููุงุฏ**: ูู ููุงุท ูุงุถุญุฉ\n๐ฅ **ุงูููุฏูููุงุช**: ุงูุชุฑุงุญ ููุฏูููุงุช ุชุนููููุฉ\nโ **ุงูุฃุณุฆูุฉ**: ุงูุฅุฌุงุจุฉ ุนูู ุฃุณุฆูุชู\n๐ก **ุงููุตุงุฆุญ**: ูุตุงุฆุญ ุฏุฑุงุณูุฉ ูููุฏุฉ\n\nูุง ุงูุฐู ุชุฑูุฏ ุงููุณุงุนุฏุฉ ููู ุชุญุฏูุฏุงูุ`,
        videoLinks: []
      }
    };

    const lowerMessage = message.toLowerCase();
    
    // ุงูุชุญูู ูู ุงูุฃุณุฆูุฉ ุงูุฌุบุฑุงููุฉ ุฃููุงู
    if (lowerMessage.includes('ุนุงุตูุฉ') && lowerMessage.includes('ูุจูุงู')) {
      return responses['ุนุงุตูุฉ'];
    } else if (lowerMessage.includes('ุนุงุตูุฉ') && lowerMessage.includes('ูุทุฑ')) {
      return responses['ุนุงุตูุฉ'];
    } else if (lowerMessage.includes('ุนุงุตูุฉ') && (lowerMessage.includes('ูุตุฑ') || lowerMessage.includes('ุณูุฑูุง') || lowerMessage.includes('ุงูุนุฑุงู'))) {
      return {
        reply: `ูุฐุง ุณุคุงู ุฌุบุฑุงูู ููุชุงุฒ! ูุฑุฌู ุชุญุฏูุฏ ุงูุฏููุฉ ุงูุชู ุชุฑูุฏ ูุนุฑูุฉ ุนุงุตูุชูุงุ ูุณุฃูุฏู ูู ุงููุนูููุงุช ุงููุงููุฉ ุนููุง.`,
        videoLinks: []
      };
    } else if (lowerMessage.includes('ูุจูุงู')) {
      return responses['ูุจูุงู'];
    } else if (lowerMessage.includes('ูุทุฑ')) {
      return responses['ูุทุฑ'];
    } else if (lowerMessage.includes('ูุฑุญุจุง') || lowerMessage.includes('hello') || lowerMessage.includes('ุฃููุง')) {
      return responses['ูุฑุญุจุง'];
    } else if (lowerMessage.includes('ุดุฑุญ') || lowerMessage.includes('explain')) {
      return responses['ุดุฑุญ'];
    } else if (lowerMessage.includes('ุชูุฎูุต') || lowerMessage.includes('summary')) {
      return responses['ุชูุฎูุต'];
    } else if (lowerMessage.includes('ูุณุงุนุฏุฉ') || lowerMessage.includes('help')) {
      return responses['ูุณุงุนุฏุฉ'];
    } else if (lowerMessage.includes('ุดูุฑุง') || lowerMessage.includes('ุดูุฑุงู')) {
      return responses['ุดูุฑุง'];
    } else if (lowerMessage.includes('ุฑูุงุถูุงุช') || lowerMessage.includes('math')) {
      return responses['ุฑูุงุถูุงุช'];
    } else if (lowerMessage.includes('ุนููู') || lowerMessage.includes('science')) {
      return responses['ุนููู'];
    } else if (lowerMessage.includes('ุนุฑุจู') || lowerMessage.includes('arabic')) {
      return responses['ุนุฑุจู'];
    } else if (lowerMessage.includes('ุงูุฌููุฒู') || lowerMessage.includes('english')) {
      return responses['ุงูุฌููุฒู'];
    } else if (lowerMessage.includes('ุนุงุตูุฉ') || lowerMessage.includes('capital')) {
      return {
        reply: `ูุฐุง ุณุคุงู ุฌุบุฑุงูู ููุชุงุฒ! ูุฑุฌู ุชุญุฏูุฏ ุงูุฏููุฉ ุงูุชู ุชุฑูุฏ ูุนุฑูุฉ ุนุงุตูุชูุงุ ูุณุฃูุฏู ูู ุงููุนูููุงุช ุงููุงููุฉ ุนููุง.\n\nูุซุงู: "ูุง ุนุงุตูุฉ ูุจูุงูุ" ุฃู "ุนุงุตูุฉ ูุตุฑ"`,
        videoLinks: []
      };
    } else {
      return responses['default'];
    }
  };

  const sendMessage = async () => {
    if (!inputMessage.trim()) return;

    const userMessage = {
      id: Date.now().toString(),
      from: 'user' as const,
      text: inputMessage,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    setInputMessage('');
    setIsLoading(true);

    try {
      let aiResponse;

      if (useSmartAI) {
        try {
          // ุงุณุชุฎุฏุงู ุงููุณุงุนุฏ ุงูุฐูู ุงูุญูููู
          if (uploadedDocument) {
            // ุชุญููู ุงููุณุชูุฏ
            console.log('ุชุญููู ุงููุณุชูุฏ:', uploadedDocument.file.name);
            aiResponse = await smartAIService.analyzeDocument(uploadedDocument.text, inputMessage);
          } else {
            // ุฑุฏ ุนุงุฏู
            console.log('ุงุณุชุฎุฏุงู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุญูููู');
            aiResponse = await smartAIService.sendMessage(inputMessage, selectedSubject || 'ุนุงู', studentId);
          }
        } catch (aiError) {
          console.error('AI Error:', aiError);
          // ุงุณุชุฎุฏุงู ุงููุธุงู ุงูุจุฏูู ูุน ููุฏูููุงุช YouTube
          aiResponse = await getEnhancedMockResponse(inputMessage, selectedSubject || 'ุนุงู');
        }
      } else {
        // ุงุณุชุฎุฏุงู ุงููุธุงู ุงููุฏูู
        console.log('ุงุณุชุฎุฏุงู ุงููุธุงู ุงููุฏูู');
        await new Promise(resolve => setTimeout(resolve, 1000 + Math.random() * 2000));
        aiResponse = await getEnhancedMockResponse(inputMessage, selectedSubject || 'ุนุงู');
      }
      
      const botMessage = {
        id: aiResponse.messageId || (Date.now() + 1).toString(),
        from: 'bot' as const,
        text: aiResponse.reply,
        timestamp: new Date(),
        videoLinks: aiResponse.videoLinks || []
      };

      setMessages(prev => [...prev, botMessage]);
    } catch (error) {
      console.error('Error sending message:', error);
      const errorMessage = {
        id: (Date.now() + 1).toString(),
        from: 'bot' as const,
        text: `ุฃุนุชุฐุฑุ ุญุฏุซ ุฎุทุฃ ูู ูุนุงูุฌุฉ ุทูุจู. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.\n\nูุตุงุฆุญ ููุญุตูู ุนูู ุฃูุถู ุงููุชุงุฆุฌ:\nโข ุชุฃูุฏ ูู ุชูุนูู "ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุญูููู" โ\nโข ุงุณุชุฎุฏู ุฃุณุฆูุฉ ูุงุถุญุฉ ููุญุฏุฏุฉ\nโข ุฌุฑุจ ุฃุณุฆูุฉ ุจุณูุทุฉ ุฃููุงู\nโข ุงูุชุธุฑ ููููุงู ูุจู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู\n\nูุซุงู ุนูู ุงูุฃุณุฆูุฉ ุงูุฌูุฏุฉ:\nโข "ูุฑุญุจุง"\nโข "ูุง ูู ูุญุชูู ุงููููุ"\nโข "ูุฎุต ูุฐุง ุงููุณุชูุฏ"`,
        timestamp: new Date()
      };
      setMessages(prev => [...prev, errorMessage]);
    } finally {
      setIsLoading(false);
    }
  };

  const getEnhancedMockResponse = async (message: string, subject: string) => {
    // ุงูุญุตูู ุนูู ุฑุฏ ุฃุณุงุณู
    const baseResponse = getMockAIResponse(message, subject);
    
    // ุฅุถุงูุฉ ููุฏูููุงุช YouTube ุฅุฐุง ูุงู ููุงุณุจุงู
    try {
      const { youtubeService } = await import('../services/youtube-api');
      const videos = await youtubeService.searchEducationalVideos(message, subject, 2);
      baseResponse.videoLinks = videos.map(video => video.url);
    } catch (error) {
      console.error('YouTube API Error:', error);
      // ุงุณุชุฎุฏุงู ููุฏูููุงุช ุงูุชุฑุงุถูุฉ
      baseResponse.videoLinks = [
        'https://www.youtube.com/watch?v=dQw4w9WgXcQ',
        'https://www.youtube.com/watch?v=9bZkp7q19f0'
      ];
    }
    
    return baseResponse;
  };

  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      sendMessage();
    }
  };

  const clearChat = () => {
    setMessages([]);
  };

  const handleDocumentUpload = (file: File, text: string) => {
    setUploadedDocument({ file, text });
    setIsDocumentUploadOpen(false);
    
    // ุฅุถุงูุฉ ุฑุณุงูุฉ ุชุฃููุฏ
    const confirmationMessage = {
      id: Date.now().toString(),
      from: 'bot' as const,
      text: `ุชู ุฑูุน ุงููุณุชูุฏ "${file.name}" ุจูุฌุงุญ! ููููู ุงูุขู ุทุฑุญ ุงูุฃุณุฆูุฉ ุญููู ุฃู ุทูุจ ุชูุฎูุตู ุฃู ุฅูุดุงุก ุนุฑุถ ุชูุฏููู ููู.`,
      timestamp: new Date()
    };
    setMessages(prev => [...prev, confirmationMessage]);
  };

  const handleSavedDocumentSelect = (savedFile: SavedFile) => {
    // ุฅูุดุงุก File object ูู ุงููุณุชูุฏ ุงููุญููุธ
    const file = new File([savedFile.content], savedFile.originalName, { type: savedFile.fileType });
    
    setUploadedDocument({ file, text: savedFile.content });
    setIsSavedDocumentsOpen(false);
    
    // ุฅุถุงูุฉ ุฑุณุงูุฉ ุชุฃููุฏ
    const confirmationMessage = {
      id: Date.now().toString(),
      from: 'bot' as const,
      text: `ุชู ูุชุญ ุงููุณุชูุฏ ุงููุญููุธ "${savedFile.originalName}" ุจูุฌุงุญ! ููููู ุงูุขู ุทุฑุญ ุงูุฃุณุฆูุฉ ุญููู ุฃู ุทูุจ ุชูุฎูุตู ุฃู ุฅูุดุงุก ุนุฑุถ ุชูุฏููู ููู.`,
      timestamp: new Date()
    };
    setMessages(prev => [...prev, confirmationMessage]);
  };

  const generatePresentation = async () => {
    if (!uploadedDocument) return;

    setIsLoading(true);
    try {
      console.log('ุฅูุดุงุก ุนุฑุถ ุชูุฏููู ูู:', uploadedDocument.file.name);
      
      let response;
      if (useSmartAI) {
        try {
          response = await smartAIService.generatePresentation(
            uploadedDocument.text, 
            `ุนุฑุถ ุชูุฏููู ูู ${uploadedDocument.file.name}`
          );
        } catch (aiError) {
          console.error('AI Error:', aiError);
          // ุงุณุชุฎุฏุงู ุงููุธุงู ุงูุจุฏูู
          response = generateMockPresentation(uploadedDocument.text, uploadedDocument.file.name);
        }
      } else {
        response = generateMockPresentation(uploadedDocument.text, uploadedDocument.file.name);
      }
      
      const botMessage = {
        id: response.messageId || (Date.now() + 1).toString(),
        from: 'bot' as const,
        text: response.reply,
        timestamp: new Date(),
        videoLinks: response.videoLinks || []
      };

      setMessages(prev => [...prev, botMessage]);
    } catch (error) {
      console.error('Error generating presentation:', error);
      const errorMessage = {
        id: (Date.now() + 1).toString(),
        from: 'bot' as const,
        text: `ุนุฐุฑุงูุ ุญุฏุซ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุนุฑุถ ุงูุชูุฏููู. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.\n\nูุตุงุฆุญ ููุญุตูู ุนูู ุฃูุถู ุงููุชุงุฆุฌ:\nโข ุชุฃูุฏ ูู ุชูุนูู "ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุญูููู" โ\nโข ุชุฃูุฏ ูู ุฑูุน ุงููุณุชูุฏ ุจูุฌุงุญ\nโข ุงูุชุธุฑ ููููุงู ูุจู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู\nโข ุฌุฑุจ ุฑูุน ููู ุฃุตุบุฑ ุฅุฐุง ูุงู ุงูููู ูุจูุฑุงู\n\nููููู ุฃูุถุงู:\nโข ุทูุจ ุชูุฎูุต ุงููุณุชูุฏ\nโข ุทุฑุญ ุฃุณุฆูุฉ ุญูู ุงููุญุชูู\nโข ุทูุจ ุดุฑุญ ููุตู ูุฃู ุฌุฒุก`,
        timestamp: new Date()
      };
      setMessages(prev => [...prev, errorMessage]);
    } finally {
      setIsLoading(false);
    }
  };

  const generateMockPresentation = (documentText: string, fileName: string) => {
    const lines = documentText.split('\n').filter(line => line.trim());
    const title = lines[0] || fileName;
    const sections = lines.filter(line => line.includes('-') || line.includes('ุงูุฏุฑุณ') || line.includes('ุงููุตู'));
    
    const presentation = `๐ฏ **ุนุฑุถ ุชูุฏููู ุชุนูููู ูู: ${fileName}**

๐ **ุงูุดุฑูุญุฉ ุงูุฃููู: ุนููุงู ุงูููุถูุน**
${title}

๐ **ุงูุดุฑูุญุฉ ุงูุซุงููุฉ: ููุฏูุฉ**
ูุฐุง ุงูุนุฑุถ ุงูุชูุฏููู ูุนุฑุถ ุงููุญุชูู ุงูุชุนูููู ูู ุงููุณุชูุฏ ุงููุฑููุน ุจุทุฑููุฉ ููุธูุฉ ููููููุฉ.

๐ **ุงูุดุฑุงุฆุญ ุงูุฑุฆูุณูุฉ:**
${sections.slice(0, 5).map((section, index) => `${index + 3}. ${section}`).join('\n')}

๐ **ุงูุดุฑูุญุฉ ุงูุฃุฎูุฑุฉ: ุงูุฎูุงุตุฉ ูุงููุตุงุฆุญ**
โข ุฑุงุฌุน ุงููุญุชูู ุจุงูุชุธุงู
โข ุงุณุชุฎุฏู ุงูุฃุณุฆูุฉ ููุชุญูู ูู ุงูููู
โข ุงุทูุจ ุงููุณุงุนุฏุฉ ุนูุฏ ุงูุญุงุฌุฉ
โข ุงุณุชุฎุฏู ุงููุตุงุฏุฑ ุงูุฅุถุงููุฉ ููุชุนูู ุฃูุซุฑ

๐ก **ูุตุงุฆุญ ููุนุฑุถ:**
โข ุชุญุฏุซ ุจูุถูุญ ูุจุจุทุก
โข ุงุณุชุฎุฏู ุงูุฃูุซูุฉ ุงูุชูุถูุญูุฉ
โข ุดุฌุน ุงูุฃุณุฆูุฉ ูุงูููุงูุดุฉ
โข ุฑุงุฌุน ุงูููุงุท ุงูุฑุฆูุณูุฉ ูู ุงูููุงูุฉ`;

    return {
      reply: presentation,
      videoLinks: [
        'https://www.youtube.com/watch?v=dQw4w9WgXcQ',
        'https://www.youtube.com/watch?v=9bZkp7q19f0'
      ],
      messageId: Date.now().toString(),
      timestamp: new Date().toISOString(),
      confidence: 0.8
    };
  };

  return (
    <>
      {/* Smart Assistant Card */}
      <div className="bg-gradient-to-br from-slate-800 to-slate-900 text-white rounded-2xl shadow-xl p-6 border border-slate-700 hover:shadow-2xl transition-all duration-300">
        <div className="flex items-center mb-4">
          <div className="w-12 h-12 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-full flex items-center justify-center text-2xl">
            ๐ค
          </div>
          <div className="ml-4">
            <h2 className="text-xl font-bold text-white">๐ฌ ุงููุณุงุนุฏ ุงูุฐูู</h2>
            <p className="text-sm text-slate-300">Smart Study Assistant</p>
          </div>
        </div>
        
        <p className="text-slate-300 mb-6 leading-relaxed">
          ุชุญุฏุซ ูุน ุงููุณุงุนุฏ ุงูุฐูู ููุญุตูู ุนูู ุดุฑุญ ูุจุณุท ููุฏุฑูุณุ ููุฎุตุงุชุ ูุฑูุงุจุท ููุฏูููุงุช ุชุนููููุฉ ูููุฏุฉ.
        </p>
        
        <div className="flex flex-col sm:flex-row gap-3">
          <button
            onClick={() => setIsChatOpen(true)}
            className="flex-1 bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white font-semibold py-3 px-6 rounded-xl transition-all duration-300 transform hover:scale-105 shadow-lg"
          >
            ๐ ุงุจุฏุฃ ุงููุญุงุฏุซุฉ
          </button>
          <button
            onClick={clearChat}
            className="px-4 py-3 bg-slate-700 hover:bg-slate-600 text-white rounded-xl transition-colors duration-300"
          >
            ๐๏ธ ูุณุญ ุงููุญุงุฏุซุฉ
          </button>
        </div>
      </div>

      {/* Chat Modal */}
      {isChatOpen && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
          <div className="bg-white dark:bg-slate-800 rounded-2xl shadow-2xl w-full max-w-4xl h-[80vh] flex flex-col">
            {/* Header */}
            <div className="bg-gradient-to-r from-indigo-600 to-purple-600 text-white p-4 rounded-t-2xl flex justify-between items-center">
              <div className="flex items-center">
                <div className="w-10 h-10 bg-white bg-opacity-20 rounded-full flex items-center justify-center text-xl">
                  ๐ค
                </div>
                <div className="ml-3">
                  <h3 className="text-lg font-bold">ุงููุณุงุนุฏ ุงูุฐูู</h3>
                  <p className="text-sm opacity-90">ูุฑุญุจุงู {studentName}ุ ููู ูููููู ูุณุงุนุฏุชูุ</p>
                </div>
              </div>
              <button
                onClick={() => setIsChatOpen(false)}
                className="text-white hover:text-gray-200 text-2xl"
              >
                โ
              </button>
            </div>

            {/* Subject Selector */}
            <div className="p-4 border-b border-gray-200 dark:border-slate-700">
              <div className="flex flex-col space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                    ุงุฎุชุฑ ุงููุงุฏุฉ ุงูุฏุฑุงุณูุฉ (ุงุฎุชูุงุฑู):
                  </label>
                  <select
                    value={selectedSubject}
                    onChange={(e) => setSelectedSubject(e.target.value)}
                    className="w-full p-2 border border-gray-300 dark:border-slate-600 rounded-lg bg-white dark:bg-slate-700 text-gray-900 dark:text-white"
                  >
                    <option value="">ุงุฎุชุฑ ุงููุงุฏุฉ</option>
                    {subjects.map(subject => (
                      <option key={subject} value={subject}>{subject}</option>
                    ))}
                  </select>
                </div>

                {/* Document Upload Section */}
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-4">
                    <button
                      onClick={() => setIsDocumentUploadOpen(true)}
                      className="flex items-center space-x-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors duration-300"
                    >
                      <span>๐</span>
                      <span>ุฑูุน ูุณุชูุฏ</span>
                    </button>
                    
                    <button
                      onClick={() => setIsSavedDocumentsOpen(true)}
                      className="flex items-center space-x-2 px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors duration-300"
                    >
                      <span>๐</span>
                      <span>ุงููููุงุช ุงููุญููุธุฉ</span>
                    </button>
                    
                    {uploadedDocument && (
                      <div className="flex items-center space-x-2">
                        <span className="text-sm text-green-600">โ {uploadedDocument.file.name}</span>
                        <button
                          onClick={() => setUploadedDocument(null)}
                          className="text-red-600 hover:text-red-800"
                        >
                          โ
                        </button>
                      </div>
                    )}
                  </div>

                  {uploadedDocument && (
                    <button
                      onClick={generatePresentation}
                      disabled={isLoading}
                      className="flex items-center space-x-2 px-4 py-2 bg-purple-600 text-white rounded-lg hover:bg-purple-700 disabled:opacity-50 transition-colors duration-300"
                    >
                      <span>๐ฏ</span>
                      <span>ุฅูุดุงุก ุนุฑุถ ุชูุฏููู</span>
                    </button>
                  )}
                </div>

                {/* AI Mode Toggle */}
                <div className="flex items-center space-x-4">
                  <label className="flex items-center space-x-2">
                    <input
                      type="checkbox"
                      checked={useSmartAI}
                      onChange={(e) => setUseSmartAI(e.target.checked)}
                      className="rounded"
                    />
                    <span className="text-sm text-gray-700 dark:text-gray-300">
                      ุงุณุชุฎุฏุงู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ุงูุญูููู
                    </span>
                  </label>
                </div>
              </div>
            </div>

            {/* Messages Area */}
            <div className="flex-1 overflow-y-auto p-4 space-y-4 bg-gray-50 dark:bg-slate-700">
              {messages.length === 0 && (
                <div className="text-center text-gray-500 dark:text-gray-400 py-8">
                  <div className="text-4xl mb-4">๐</div>
                  <p className="text-lg">ูุฑุญุจุงู! ุฃูุง ุงููุณุงุนุฏ ุงูุฐูู</p>
                  <p className="text-sm mt-2">ูููููู ูุณุงุนุฏุชู ูู:</p>
                  <ul className="text-sm mt-2 space-y-1">
                    <li>โข ุดุฑุญ ุงูุฏุฑูุณ ูุชูุฎูุตูุง</li>
                    <li>โข ุงูุชุฑุงุญ ููุฏูููุงุช ุชุนููููุฉ</li>
                    <li>โข ุงูุฅุฌุงุจุฉ ุนูู ุงูุฃุณุฆูุฉ ุงูุฃูุงุฏูููุฉ</li>
                    <li>โข ุชูุฏูู ูุตุงุฆุญ ุฏุฑุงุณูุฉ</li>
                  </ul>
                </div>
              )}

              {messages.map((message) => (
                <div
                  key={message.id}
                  className={`flex ${message.from === 'user' ? 'justify-end' : 'justify-start'}`}
                >
                  <div
                    className={`max-w-[80%] p-4 rounded-2xl ${
                      message.from === 'user'
                        ? 'bg-gradient-to-r from-indigo-600 to-purple-600 text-white'
                        : 'bg-white dark:bg-slate-600 text-gray-900 dark:text-white border border-gray-200 dark:border-slate-500'
                    }`}
                  >
                    <p className={`whitespace-pre-wrap ${message.from === 'user' ? 'text-white' : 'text-gray-900 dark:text-white'}`}>{message.text}</p>
                    
                    {/* Video Links */}
                    {message.videoLinks && message.videoLinks.length > 0 && (
                      <div className="mt-3 pt-3 border-t border-gray-300 dark:border-slate-400">
                        <p className="text-sm font-medium mb-2 text-gray-700 dark:text-gray-300">๐บ ููุฏูููุงุช ุชุนููููุฉ ููุชุฑุญุฉ:</p>
                        <div className="space-y-2">
                          {message.videoLinks.map((link, index) => (
                            <a
                              key={index}
                              href={link}
                              target="_blank"
                              rel="noopener noreferrer"
                              className="block text-sm text-blue-600 dark:text-blue-400 hover:underline hover:text-blue-800 dark:hover:text-blue-300 transition-colors duration-200"
                            >
                              ๐ฅ ููุฏูู ุชุนูููู #{index + 1}
                            </a>
                          ))}
                        </div>
                      </div>
                    )}
                    
                    <div className="text-xs opacity-70 mt-2">
                      {message.timestamp.toLocaleTimeString('ar-SA')}
                    </div>
                  </div>
                </div>
              ))}

              {isLoading && (
                <div className="flex justify-start">
                  <div className="bg-white dark:bg-slate-600 p-4 rounded-2xl border border-gray-200 dark:border-slate-500">
                    <div className="flex items-center space-x-2">
                      <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-indigo-600"></div>
                      <span className="text-sm text-gray-600 dark:text-gray-300">ุงููุณุงุนุฏ ููุชุจ...</span>
                    </div>
                  </div>
                </div>
              )}
            </div>

            {/* Input Area */}
            <div className="p-4 border-t border-gray-200 dark:border-slate-700">
              <div className="flex space-x-2">
                <input
                  type="text"
                  value={inputMessage}
                  onChange={(e) => setInputMessage(e.target.value)}
                  onKeyPress={handleKeyPress}
                  placeholder="ุงูุชุจ ุณุคุงูู ููุง..."
                  className="flex-1 p-3 border border-gray-300 dark:border-slate-600 rounded-xl bg-white dark:bg-slate-700 text-gray-900 dark:text-white focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                  disabled={isLoading}
                />
                <button
                  onClick={sendMessage}
                  disabled={!inputMessage.trim() || isLoading}
                  className="px-6 py-3 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-xl hover:from-indigo-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300"
                >
                  {isLoading ? 'โณ' : '๐ค'}
                </button>
              </div>
            </div>
          </div>
        </div>
      )}

      {/* Document Upload Modal */}
      {isDocumentUploadOpen && (
        <DocumentUpload
          onDocumentUpload={handleDocumentUpload}
          onClose={() => setIsDocumentUploadOpen(false)}
          studentId={studentId}
          studentName={studentName}
        />
      )}

      {/* Saved Documents Manager Modal */}
      {isSavedDocumentsOpen && (
        <SavedDocumentsManager
          studentId={studentId}
          studentName={studentName}
          onDocumentSelect={handleSavedDocumentSelect}
          onClose={() => setIsSavedDocumentsOpen(false)}
        />
      )}
    </>
  );
};

export default SmartAssistant;
