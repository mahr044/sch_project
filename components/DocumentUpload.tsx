import React, { useState, useRef } from 'react';
import { fileStorageService } from '../services/file-storage-service';

interface DocumentUploadProps {
  onDocumentUpload: (file: File, text: string) => void;
  onClose: () => void;
  studentId?: string;
  studentName?: string;
}

const DocumentUpload: React.FC<DocumentUploadProps> = ({ onDocumentUpload, onClose, studentId = 'demo-student', studentName = 'ุงูุทุงูุจ' }) => {
  const [selectedFile, setSelectedFile] = useState<File | null>(null);
  const [isUploading, setIsUploading] = useState(false);
  const [uploadProgress, setUploadProgress] = useState(0);
  const [extractedText, setExtractedText] = useState('');
  const fileInputRef = useRef<HTMLInputElement>(null);

  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target.files?.[0];
    if (file) {
      setSelectedFile(file);
      extractTextFromFile(file);
    }
  };

  const extractTextFromFile = async (file: File) => {
    setIsUploading(true);
    setUploadProgress(0);

    try {
      let text = '';
      
      if (file.type === 'text/plain') {
        text = await file.text();
      } else if (file.type === 'application/pdf') {
        // ูุญุงูุงุฉ ูุญุชูู PDF ุชุนูููู
        text = `ูุฐูุฑุฉ ุชูููููุฌูุง ุงูุตู ุงูุซุงูู ุงูุฅุนุฏุงุฏู - ุงูุชุฑู ุงูุฃูู

ุงูุฏุฑุณ ุงูุฃูู: ููุฏูุฉ ูู ุงูุชูููููุฌูุง
- ุชุนุฑูู ุงูุชูููููุฌูุง: ุงูุชูููููุฌูุง ูู ุงุณุชุฎุฏุงู ุงููุนุฑูุฉ ุงูุนูููุฉ ูู ุญู ุงููุดุงูู ุงูุนูููุฉ
- ุฃูููุฉ ุงูุชูููููุฌูุง ูู ุญูุงุชูุง: ุชุณููู ุงูููุงูุ ุชุญุณูู ุงูุงุชุตุงูุ ุชุทููุฑ ุงูุชุนููู
- ุฃููุงุน ุงูุชูููููุฌูุง: ุชูููููุฌูุง ุงููุนูููุงุชุ ุงูุชูููููุฌูุง ุงูุทุจูุฉุ ุงูุชูููููุฌูุง ุงูุตูุงุนูุฉ
- ุงูุชุทูุฑ ุงูุชูููููุฌู ุนุจุฑ ุงูุชุงุฑูุฎ: ูู ุงูุฃุฏูุงุช ุงูุจุฏุงุฆูุฉ ุฅูู ุงูุฐูุงุก ุงูุงุตุทูุงุนู

ุงูุฏุฑุณ ุงูุซุงูู: ุฃุฌูุฒุฉ ุงูุญุงุณูุจ
- ููููุงุช ุงูุญุงุณูุจ ุงูุฃุณุงุณูุฉ: ุงููุนุงูุฌุ ุงูุฐุงูุฑุฉุ ุงููุฑุต ุงูุตูุจุ ุงูุดุงุดุฉุ ููุญุฉ ุงูููุงุชูุญ
- ุฃููุงุน ุฃุฌูุฒุฉ ุงูุญุงุณูุจ: ุงูุญุงุณูุจ ุงูููุชุจูุ ุงูุญุงุณูุจ ุงููุญูููุ ุงูุญุงุณูุจ ุงูููุญู
- ุฃูุธูุฉ ุงูุชุดุบูู: Windowsุ macOSุ Linux
- ุงูุจุฑุงูุฌ ูุงูุชุทุจููุงุช: ูุนุงูุฌุฉ ุงููุตูุตุ ุงูุฌุฏุงูู ุงูุฅููุชุฑูููุฉุ ุงูุนุฑูุถ ุงูุชูุฏูููุฉ

ุงูุฏุฑุณ ุงูุซุงูุซ: ุงูุฅูุชุฑูุช ูุงูุดุจูุงุช
- ุชุนุฑูู ุงูุฅูุชุฑูุช: ุดุจูุฉ ุนุงูููุฉ ูู ุฃุฌูุฒุฉ ุงูุญุงุณูุจ ุงููุชุตูุฉ
- ููุงุฆุฏ ุงูุฅูุชุฑูุช: ุงูุจุญุซ ุนู ุงููุนูููุงุชุ ุงูุชูุงุตูุ ุงูุชุฌุงุฑุฉ ุงูุฅููุชุฑูููุฉ
- ุฃููุงุน ุงูุดุจูุงุช: ุงูุดุจูุฉ ุงููุญููุฉ (LAN)ุ ุงูุดุจูุฉ ุงููุงุณุนุฉ (WAN)
- ุงูุฃูุงู ุนูู ุงูุฅูุชุฑูุช: ูููุงุช ุงููุฑูุฑ ุงููููุฉุ ุชุฌูุจ ุงูููุงูุน ุงููุดุจููุฉ

ุงูุฏุฑุณ ุงูุฑุงุจุน: ุงูุจุฑูุฌุฉ
- ููููู ุงูุจุฑูุฌุฉ: ูุชุงุจุฉ ุชุนูููุงุช ููุญุงุณูุจ ูุชูููุฐ ููุงู ูุนููุฉ
- ูุบุงุช ุงูุจุฑูุฌุฉ: Pythonุ JavaScriptุ Javaุ C++
- ุฃุณุงุณูุงุช ุงูุจุฑูุฌุฉ: ุงููุชุบูุฑุงุชุ ุงูุดุฑูุทุ ุงูุญููุงุช
- ุฃูุซูุฉ ุนูููุฉ: ุจุฑูุงูุฌ ุจุณูุท ูุญุณุงุจ ุงููุฌููุน

ุงูุฏุฑุณ ุงูุฎุงูุณ: ุงูุฐูุงุก ุงูุงุตุทูุงุนู
- ุชุนุฑูู ุงูุฐูุงุก ุงูุงุตุทูุงุนู: ูุฏุฑุฉ ุงูุขูุงุช ุนูู ูุญุงูุงุฉ ุงูุฐูุงุก ุงูุจุดุฑู
- ุชุทุจููุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู: ุงููุณุงุนุฏุงุช ุงูุฐููุฉุ ุงูุณูุงุฑุงุช ุฐุงุชูุฉ ุงูููุงุฏุฉุ ุงูุชุดุฎูุต ุงูุทุจู
- ููุงุฆุฏ ููุฎุงุทุฑ ุงูุฐูุงุก ุงูุงุตุทูุงุนู: ุชุญุณูู ุงูููุงุกุฉ ููุงุจู ูุฎุงูู ุงูุฎุตูุตูุฉ
- ูุณุชูุจู ุงูุฐูุงุก ุงูุงุตุทูุงุนู: ุชุทููุฑ ูุฏุฑุงุช ุฃูุซุฑ ุชูุฏูุงู

ุฃุณุฆูุฉ ูุชูุงุฑูู:
1. ูุง ูู ุชุนุฑูู ุงูุชูููููุฌูุงุ
2. ุงุฐูุฑ ููููุงุช ุงูุญุงุณูุจ ุงูุฃุณุงุณูุฉ
3. ูุง ูู ููุงุฆุฏ ุงูุฅูุชุฑูุชุ
4. ุงุดุฑุญ ููููู ุงูุจุฑูุฌุฉ
5. ูุง ูู ุชุทุจููุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนูุ`;
      } else if (file.type.includes('word') || file.type.includes('document')) {
        // ูุญุงูุงุฉ ูุญุชูู Word ุชุนูููู
        text = `ุชูุฌููุงุช ุชุฏุฑูุณ ูุงุฏุฉ ุงูููุจููุชุฑ - ุงูุฅุนุฏุงุฏู

ุงููุตู ุงูุฃูู: ุฃุณุงุณูุงุช ุงูููุจููุชุฑ
- ุชุนุฑูู ุงูููุจููุชุฑ: ุฌูุงุฒ ุฅููุชุฑููู ูุงุฏุฑ ุนูู ูุนุงูุฌุฉ ุงูุจูุงูุงุช ูุชูููุฐ ุงูุนูููุงุช
- ููููุงุช ุงูููุจููุชุฑ ุงูุฃุณุงุณูุฉ: ุงููุนุงูุฌ (CPU)ุ ุงูุฐุงูุฑุฉ ุงูุนุดูุงุฆูุฉ (RAM)ุ ุงููุฑุต ุงูุตูุจ (HDD)
- ุฃููุงุน ุฃุฌูุฒุฉ ุงูููุจููุชุฑ: ุงูุญุงุณูุจ ุงูููุชุจูุ ุงูุญุงุณูุจ ุงููุญูููุ ุงูุญุงุณูุจ ุงูููุญูุ ุงูููุงุชู ุงูุฐููุฉ
- ุฃูุธูุฉ ุงูุชุดุบูู ุงููุฎุชููุฉ: Windowsุ macOSุ Linuxุ Androidุ iOS

ุงููุตู ุงูุซุงูู: ุงูุจุฑูุฌุฉ
- ููููู ุงูุจุฑูุฌุฉ: ุนูููุฉ ูุชุงุจุฉ ุชุนูููุงุช ููุญุงุณูุจ ูุชูููุฐ ููุงู ูุญุฏุฏุฉ
- ูุบุงุช ุงูุจุฑูุฌุฉ ุงููุฎุชููุฉ: Python (ุณููุฉ ุงูุชุนูู)ุ JavaScript (ููููุงูุน)ุ Java (ููุชุทุจููุงุช)
- ุฃุณุงุณูุงุช ุงูุจุฑูุฌุฉ: ุงููุชุบูุฑุงุชุ ุงูุดุฑูุท (if/else)ุ ุงูุญููุงุช (for/while)ุ ุงูุฏูุงู
- ุฃูุซูุฉ ุนูููุฉ: ุจุฑูุงูุฌ ุญุณุงุจ ุงูุนูุฑุ ุจุฑูุงูุฌ ุชุญููู ุงูุนููุงุชุ ุจุฑูุงูุฌ ูุงุฆูุฉ ุงูููุงู

ุงููุตู ุงูุซุงูุซ: ุงูุฅูุชุฑูุช
- ุชุนุฑูู ุงูุฅูุชุฑูุช: ุดุจูุฉ ุนุงูููุฉ ุชุฑุจุท ููุงููู ุงูุฃุฌูุฒุฉ ุญูู ุงูุนุงูู
- ููุงุฆุฏ ุงูุฅูุชุฑูุช: ุงูุจุญุซ ุนู ุงููุนูููุงุชุ ุงูุชูุงุตู ุงูุงุฌุชูุงุนูุ ุงูุชุฌุงุฑุฉ ุงูุฅููุชุฑูููุฉุ ุงูุชุนููู ุนู ุจูุนุฏ
- ุงูุฃูุงู ุนูู ุงูุฅูุชุฑูุช: ุงุณุชุฎุฏุงู ูููุงุช ูุฑูุฑ ูููุฉุ ุชุฌูุจ ุงูููุฑ ุนูู ุงูุฑูุงุจุท ุงููุดุจููุฉ
- ุงูุจุญุซ ุนูู ุงูุฅูุชุฑูุช: ุงุณุชุฎุฏุงู ูุญุฑูุงุช ุงูุจุญุซุ ุชูููู ูุตุฏุงููุฉ ุงููุนูููุงุช

ุงููุตู ุงูุฑุงุจุน: ุงูุชุทุจููุงุช
- ูุนุงูุฌุฉ ุงููุตูุต: Microsoft Wordุ Google Docsุ ูุชุงุจุฉ ุงููุณุชูุฏุงุช ูุชูุณูููุง
- ุงูุฌุฏุงูู ุงูุฅููุชุฑูููุฉ: Microsoft Excelุ Google Sheetsุ ุชุญููู ุงูุจูุงูุงุช ูุงูุฑุณูู ุงูุจูุงููุฉ
- ุงูุนุฑูุถ ุงูุชูุฏูููุฉ: Microsoft PowerPointุ Google Slidesุ ุฅูุดุงุก ุงูุนุฑูุถ ุงูุชูุฏูููุฉ
- ููุงุนุฏ ุงูุจูุงูุงุช: Microsoft Accessุ ุชุฎุฒูู ูุฅุฏุงุฑุฉ ุงููุนูููุงุช

ุฃุณุฆูุฉ ูุชูุงุฑูู:
1. ูุง ูู ุชุนุฑูู ุงูููุจููุชุฑุ
2. ุงุฐูุฑ ููููุงุช ุงูููุจููุชุฑ ุงูุฃุณุงุณูุฉ
3. ูุง ูู ููุงุฆุฏ ุงูุฅูุชุฑูุชุ
4. ุงุดุฑุญ ููููู ุงูุจุฑูุฌุฉ
5. ูุง ูู ุฃููุงุน ุงูุชุทุจููุงุชุ`;
      } else {
        text = `[File: ${file.name}]\n\nููุน ุงูููู ุบูุฑ ูุฏุนูู. ูุฑุฌู ุชุญูููู ุฅูู ููู ูุตู (.txt) ุฃู PDF.`;
      }

      // ูุญุงูุงุฉ ุงูุชูุฏู
      for (let i = 0; i <= 100; i += 10) {
        setUploadProgress(i);
        await new Promise(resolve => setTimeout(resolve, 100));
      }

      setExtractedText(text);
    } catch (error) {
      console.error('Error extracting text:', error);
      setExtractedText('ุญุฏุซ ุฎุทุฃ ูู ุงุณุชุฎุฑุงุฌ ุงููุต ูู ุงูููู.');
    } finally {
      setIsUploading(false);
    }
  };

  const handleUpload = () => {
    if (selectedFile && extractedText) {
      try {
        // ุญูุธ ุงูููู ูู ุงููุธุงู
        const savedFile = fileStorageService.saveFile(
          selectedFile, 
          extractedText, 
          studentId, 
          studentName
        );
        
        console.log('ุชู ุญูุธ ุงูููู ุจูุฌุงุญ:', savedFile);
        
        // ุฅุฑุณุงู ุงูููู ูููููู ุงูุฃุจ
        onDocumentUpload(selectedFile, extractedText);
        onClose();
      } catch (error) {
        console.error('ุฎุทุฃ ูู ุญูุธ ุงูููู:', error);
        alert('ุญุฏุซ ุฎุทุฃ ูู ุญูุธ ุงูููู. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.');
      }
    }
  };

  const handleDragOver = (event: React.DragEvent) => {
    event.preventDefault();
  };

  const handleDrop = (event: React.DragEvent) => {
    event.preventDefault();
    const file = event.dataTransfer.files[0];
    if (file) {
      setSelectedFile(file);
      extractTextFromFile(file);
    }
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white dark:bg-slate-800 rounded-2xl shadow-2xl w-full max-w-2xl max-h-[90vh] overflow-y-auto">
        {/* Header */}
        <div className="bg-gradient-to-r from-indigo-600 to-purple-600 text-white p-4 rounded-t-2xl flex justify-between items-center">
          <div className="flex items-center">
            <div className="w-10 h-10 bg-white bg-opacity-20 rounded-full flex items-center justify-center text-xl">
              ๐
            </div>
            <div className="ml-3">
              <h3 className="text-lg font-bold">ุฑูุน ุงููุณุชูุฏุงุช</h3>
              <p className="text-sm opacity-90">ุงุฑูุน ูุณุชูุฏุงู ููุญุตูู ุนูู ูุณุงุนุฏุฉ ุฐููุฉ</p>
            </div>
          </div>
          <button
            onClick={onClose}
            className="text-white hover:text-gray-200 text-2xl"
          >
            โ
          </button>
        </div>

        {/* Content */}
        <div className="p-6">
          {/* File Upload Area */}
          <div
            className={`border-2 border-dashed rounded-xl p-8 text-center transition-colors duration-300 ${
              selectedFile
                ? 'border-green-500 bg-green-50 dark:bg-green-900/20'
                : 'border-gray-300 dark:border-slate-600 hover:border-indigo-500'
            }`}
            onDragOver={handleDragOver}
            onDrop={handleDrop}
          >
            {selectedFile ? (
              <div className="space-y-4">
                <div className="text-green-600 text-4xl">โ</div>
                <h4 className="text-lg font-semibold text-gray-900 dark:text-white">
                  ุชู ุงุฎุชูุงุฑ ุงูููู
                </h4>
                <p className="text-sm text-gray-600 dark:text-gray-400">
                  {selectedFile.name} ({Math.round(selectedFile.size / 1024)} KB)
                </p>
              </div>
            ) : (
              <div className="space-y-4">
                <div className="text-gray-400 text-4xl">๐</div>
                <h4 className="text-lg font-semibold text-gray-900 dark:text-white">
                  ุงุณุญุจ ุงูููู ููุง ุฃู ุงููุฑ ููุงุฎุชูุงุฑ
                </h4>
                <p className="text-sm text-gray-600 dark:text-gray-400">
                  ูุฏุนู: ูููุงุช ูุตูุฉ (.txt), PDF, Word
                </p>
                <button
                  onClick={() => fileInputRef.current?.click()}
                  className="px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors duration-300"
                >
                  ุงุฎุชุฑ ููู
                </button>
              </div>
            )}

            <input
              ref={fileInputRef}
              type="file"
              accept=".txt,.pdf,.doc,.docx"
              onChange={handleFileSelect}
              className="hidden"
            />
          </div>

          {/* Upload Progress */}
          {isUploading && (
            <div className="mt-6">
              <div className="flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-2">
                <span>ุฌุงุฑู ูุนุงูุฌุฉ ุงูููู...</span>
                <span>{uploadProgress}%</span>
              </div>
              <div className="w-full bg-gray-200 dark:bg-slate-700 rounded-full h-2">
                <div
                  className="bg-indigo-600 h-2 rounded-full transition-all duration-300"
                  style={{ width: `${uploadProgress}%` }}
                ></div>
              </div>
            </div>
          )}

          {/* Extracted Text Preview */}
          {extractedText && (
            <div className="mt-6">
              <h4 className="text-lg font-semibold text-gray-900 dark:text-white mb-3">
                ูุนุงููุฉ ุงููุญุชูู ุงููุณุชุฎุฑุฌ:
              </h4>
              <div className="bg-gray-50 dark:bg-slate-700 rounded-lg p-4 max-h-40 overflow-y-auto">
                <p className="text-sm text-gray-700 dark:text-gray-300 whitespace-pre-wrap">
                  {extractedText.length > 500 
                    ? extractedText.substring(0, 500) + '...' 
                    : extractedText
                  }
                </p>
              </div>
              <p className="text-xs text-gray-500 dark:text-gray-400 mt-2">
                {extractedText.length} ุญุฑู
              </p>
            </div>
          )}

          {/* Action Buttons */}
          <div className="flex justify-end space-x-3 mt-6">
            <button
              onClick={onClose}
              className="px-4 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition-colors duration-300"
            >
              ุฅูุบุงุก
            </button>
            <button
              onClick={handleUpload}
              disabled={!selectedFile || !extractedText || isUploading}
              className="px-6 py-2 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-lg hover:from-indigo-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300"
            >
              {isUploading ? 'ุฌุงุฑู ุงููุนุงูุฌุฉ...' : 'ุฑูุน ุงููุณุชูุฏ'}
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default DocumentUpload;
